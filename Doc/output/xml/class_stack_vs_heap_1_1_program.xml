<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_stack_vs_heap_1_1_program" kind="class" language="C#" prot="public" sealed="yes">
    <compoundname>StackVsHeap::Program</compoundname>
    <innerclass refid="class_stack_vs_heap_1_1_program_1_1_person" prot="public">StackVsHeap::Program::Person</innerclass>
    <innerclass refid="struct_stack_vs_heap_1_1_program_1_1_point" prot="public">StackVsHeap::Program::Point</innerclass>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_stack_vs_heap_1_1_program_1af3c76b70915c3cc813f5f2eacde3443b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void StackVsHeap.Program.Main</definition>
        <argsstring>(string[] args)</argsstring>
        <name>Main</name>
        <qualifiedname>StackVsHeap.Program.Main</qualifiedname>
        <param>
          <type>string[]</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>The entry point of the console application that demonstrates stack versus heap memory allocation in .NET. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of command-line arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Pokora/ZbW/ZbW.CodeSnippets/Source/StackVsHeap/Program.cs" line="17" column="28" bodyfile="D:/Pokora/ZbW/ZbW.CodeSnippets/Source/StackVsHeap/Program.cs" bodystart="17" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the entry point of the application demonstrating the concepts of stack versus heap memory usage in .NET. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is sealed to prevent inheritance. </para>
    </detaileddescription>
    <location file="D:/Pokora/ZbW/ZbW.CodeSnippets/Source/StackVsHeap/Program.cs" line="10" column="11" bodyfile="D:/Pokora/ZbW/ZbW.CodeSnippets/Source/StackVsHeap/Program.cs" bodystart="11" bodyend="64"/>
    <listofallmembers>
      <member refid="class_stack_vs_heap_1_1_program_1af3c76b70915c3cc813f5f2eacde3443b" prot="public" virt="non-virtual"><scope>StackVsHeap::Program</scope><name>Main</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
